{"version":3,"sources":["utils/socket-io.ts","utils/electron.ts","utils/index.ts","scenes/main-menu.ts","scenes/index.ts","config.ts","game.ts"],"names":[],"mappings":";4FAAA,MAAA,EAAA,QAAA,qBAEM,WAAE,GAAe,QAAQ,IACzB,GAAW,EAAA,EAAA,IAAG,EAAY,CAC9B,aAAa,EACb,WAAY,CAAC,eAIN,QAAA,SAAA,EAFT,EAAS,GAAG,gBAAkB,GAAU,QAAQ,IAAI,6CAA8C;;4FCOlG,MAAM,EAAW,OAAO,QAAQ,YAEvB,QAAA,SAAA;;wfChBT,EAAA,QAAA,eAAA,SACA,EAAA,QAAA,cAAA;;4FCDA,QAAA,UACA,MAAA,EAAA,QAAA,YAEA,MAAM,UAAiB,OAAO,MAC5B,cACE,MAAM,CAAE,IAAK,aAGf,SACE,EAAA,SAAS,GAAG,UAAW,IAAM,QAAQ,IAAI,4CAIpC,QAAA,SAAA;;wfCbT,EAAA,QAAA,eAAA;;8FCAA,MAAA,EAAA,QAAA,aAEM,WAAE,EAAU,YAAE,GAAgB,QAAQ,IAE/B,QAAA,WAA2C,CACtD,MAAO,WACP,KAAM,OAAO,KACb,MAAO,CACL,KAAM,OAAO,MAAM,IACnB,OAAQ,OACR,MAAO,SAAS,GAChB,OAAQ,SAAS,IAEnB,MAAO,CAAC,EAAA;;wFCbV,QAAA,UACA,MAAA,EAAA,QAAA,YAEA,MAAa,UAAa,OAAO,KAC/B,YAAY,GACV,MAAM,IAFV,QAAA,KAAA,EAMA,OAAO,iBAAiB,OAAQ,KACjB,IAAI,EAAK,EAAA","file":"game.0efd262c.js","sourceRoot":"../src","sourcesContent":["import { io } from 'socket.io-client';\n\nconst { SERVER_URL } = process.env;\nconst socketIo = io(SERVER_URL, {\n  autoConnect: true, // TODO: remove this\n  transports: ['websocket']\n});\nsocketIo.on('connect_error', (error) => console.log('[socket.io-client] Connect to server error', error));\n\nexport { socketIo };\n","import * as Electron from 'electron';\n\ntype ClientElectron = Pick<\n  typeof Electron,\n  | 'clipboard'\n  | 'contextBridge'\n  | 'crashReporter'\n  | 'desktopCapturer'\n  | 'ipcRenderer'\n  | 'nativeImage'\n  | 'shell'\n  | 'webFrame'\n>;\n\nconst electron = window.require('electron') as ClientElectron;\n\nexport { electron };\n","export * from './socket-io';\nexport * from './electron';\n","import 'Phaser';\nimport { socketIo } from '../utils';\n\nclass MainMenu extends Phaser.Scene {\n  constructor() {\n    super({ key: 'MainMenu' });\n  }\n\n  create() {\n    socketIo.on('connect', () => console.log('[socket.io-client] Connected to server'));\n  }\n}\n\nexport { MainMenu };\n","export * from './main-menu';\n","import { MainMenu } from './scenes';\n\nconst { GAME_WIDTH, GAME_HEIGHT } = process.env;\n\nexport const GameConfig: Phaser.Types.Core.GameConfig = {\n  title: 'Munchkin',\n  type: Phaser.AUTO,\n  scale: {\n    mode: Phaser.Scale.FIT,\n    parent: 'game',\n    width: parseInt(GAME_WIDTH),\n    height: parseInt(GAME_HEIGHT)\n  },\n  scene: [MainMenu] // TODO add more scenes here\n};\n","import 'Phaser';\nimport { GameConfig } from './config';\n\nexport class Game extends Phaser.Game {\n  constructor(config: Phaser.Types.Core.GameConfig) {\n    super(config);\n  }\n}\n\nwindow.addEventListener('load', () => {\n  const game = new Game(GameConfig);\n});\n"]}