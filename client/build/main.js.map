{"version":3,"sources":["auth-service.ts","main.ts"],"names":[],"mappings":"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","file":"main.js","sourceRoot":"../src","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport axios, { AxiosRequestConfig } from 'axios';\nimport * as url from 'url';\nimport * as keytar from 'keytar';\nimport * as os from 'os';\n\ninterface GoogleProfile {\n  aud: string;\n  email: string;\n  email_verified: boolean;\n  exp: number;\n  family_name: string;\n  given_name: string;\n  iat: number;\n  iss: string;\n  locale: string;\n  name: string;\n  nickname: string;\n  picture: string;\n  sub: string;\n  updated_at: string;\n}\ninterface EmailProfile {\n  aud: string;\n  email: string;\n  email_verified: boolean;\n  exp: number;\n  iat: number;\n  iss: string;\n  name: string;\n  nickname: string;\n  picture: string;\n  sub: string;\n  updated_at: string;\n}\ntype Profile = GoogleProfile | EmailProfile;\n\nconst { REDIRECT_URL, KEYTAR_SERVICE, AUTH0_DOMAIN, CLIENT_ID, API_IDENTIFIER } = process.env;\nconst KEYTAR_ACCOUNT = os.userInfo().username;\n\nexport class AuthService {\n  accessToken: string | null;\n  profile: Profile | null;\n  refreshToken: string | null;\n\n  constructor() {\n    this.clearData();\n  }\n\n  get authenticationUrl() {\n    return `https://${AUTH0_DOMAIN}/authorize?audience=${API_IDENTIFIER}&scope=openid profile user_metadata offline_access email&response_type=code&client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL}`;\n  }\n\n  get logoutUrl() {\n    return `https://${AUTH0_DOMAIN}/v2/logout`;\n  }\n\n  get userId() {\n    const subArray = this.profile?.sub?.split('|');\n    if (subArray[0] === 'auth0') {\n      return subArray[1];\n    }\n    return null;\n  }\n\n  clearData() {\n    this.accessToken = null;\n    this.profile = null;\n    this.refreshToken = null;\n  }\n\n  async refreshTokens() {\n    const refreshToken = await keytar.getPassword(KEYTAR_SERVICE, KEYTAR_ACCOUNT);\n    if (refreshToken) {\n      const refreshOptions = {\n        method: 'POST',\n        url: `https://${AUTH0_DOMAIN}/oauth/token`,\n        headers: { 'content-type': 'application/json' },\n        data: {\n          grant_type: 'refresh_token',\n          client_id: CLIENT_ID,\n          refresh_token: refreshToken\n        }\n      };\n      try {\n        const response = await axios(refreshOptions);\n        const { access_token, id_token } = response.data;\n        this.accessToken = access_token;\n        this.profile = jwtDecode(id_token);\n      } catch (error) {\n        await this.logout();\n        throw error;\n      }\n    } else {\n      throw new Error('No available refresh token.');\n    }\n  }\n\n  async loadTokens(callbackUrl: string) {\n    const query = url.parse(callbackUrl, true).query;\n    const options: AxiosRequestConfig = {\n      method: 'POST',\n      url: `https://${AUTH0_DOMAIN}/oauth/token`,\n      headers: {\n        'content-type': 'application/json',\n        accept: 'application/json',\n        'accept-encoding': 'identity'\n      },\n      responseType: 'json',\n      data: JSON.stringify({\n        grant_type: 'authorization_code',\n        client_id: CLIENT_ID,\n        code: query.code,\n        redirect_uri: REDIRECT_URL\n      })\n    };\n\n    try {\n      const response = await axios(options);\n      const { access_token, id_token, refresh_token } = response.data;\n      this.accessToken = access_token;\n      this.profile = jwtDecode(id_token);\n      this.refreshToken = refresh_token;\n      if (this.refreshToken) {\n        await keytar.setPassword(KEYTAR_SERVICE, KEYTAR_ACCOUNT, this.refreshToken);\n      }\n    } catch (error) {\n      await this.logout();\n      throw error;\n    }\n  }\n\n  async logout() {\n    await keytar.deletePassword(KEYTAR_SERVICE, KEYTAR_ACCOUNT);\n    this.clearData();\n  }\n}\n","require('dotenv').config();\nimport { app, BrowserWindow, ipcMain } from 'electron';\nimport * as path from 'path';\nimport * as isDev from 'electron-is-dev';\nimport { AuthService } from './auth-service';\n\ntype BrowserWindowOrNull = BrowserWindow | null;\ntype WindowType = 'app' | 'auth' | 'logout';\n\nlet authService = new AuthService();\n\nconst { SERVER_URL, REDIRECT_URL, GAME_WIDTH, GAME_HEIGHT } = process.env;\n\nlet appWindow: BrowserWindowOrNull = null;\nlet authWindow: BrowserWindowOrNull = null;\nlet logoutWindow: BrowserWindowOrNull = null;\n// let isConfirmed = false;\n\nfunction closeAuthWindow() {\n  return new Promise<void>((res) => {\n    if (authWindow !== null) {\n      authWindow.on('closed', () => {\n        authWindow = null;\n        res();\n      });\n      authWindow.close();\n    } else {\n      res();\n    }\n  });\n}\n\nfunction closeAppWindow() {\n  return new Promise<void>((res) => {\n    if (appWindow !== null) {\n      // isConfirmed = true;\n      appWindow.on('closed', () => {\n        appWindow = null;\n        // isConfirmed = false;\n        res();\n      });\n      appWindow.close();\n    } else {\n      res();\n    }\n  });\n}\n\nfunction closeLogoutWindow() {\n  return new Promise<void>((res) => {\n    if (logoutWindow !== null) {\n      logoutWindow.on('closed', () => {\n        logoutWindow = null;\n        res();\n      });\n      logoutWindow.close();\n    } else {\n      res();\n    }\n  });\n}\n\nasync function cleanupWindows(caller: WindowType) {\n  caller !== 'app' && (await closeAppWindow());\n  caller !== 'auth' && (await closeAuthWindow());\n  caller !== 'logout' && (await closeLogoutWindow());\n}\n\nasync function createWindow() {\n  try {\n    await authService.refreshTokens();\n    createAppWindow();\n  } catch (err) {\n    createAuthWindow();\n  }\n}\n\nasync function createAppWindow() {\n  await cleanupWindows('app');\n  if (appWindow !== null) return;\n\n  appWindow = new BrowserWindow({\n    width: parseInt(GAME_WIDTH),\n    height: parseInt(GAME_HEIGHT),\n    useContentSize: true,\n    resizable: false,\n    webPreferences: {\n      nodeIntegration: true,\n      contextIsolation: false\n    }\n  });\n  appWindow.loadURL(`file://${path.join(__dirname, './index.html')}`);\n  appWindow.on('show', () => {\n    if (isDev) {\n      appWindow?.webContents.openDevTools();\n      appWindow?.focus();\n    }\n  });\n  appWindow.on('close', (e) => {\n    // if (!isConfirmed) {\n    //   e.preventDefault();\n    //   appWindow?.webContents.send('try-exit');\n    // }\n  });\n}\n\nasync function createAuthWindow() {\n  await cleanupWindows('auth');\n  if (authWindow !== null) return;\n  authWindow = new BrowserWindow({\n    width: 960,\n    height: 720,\n    resizable: false,\n    webPreferences: {\n      nodeIntegration: false\n    }\n  });\n  authWindow.on('show', () => {\n    if (isDev) {\n      authWindow?.webContents.openDevTools();\n      authWindow?.focus();\n    }\n  });\n  authWindow.loadURL(authService.authenticationUrl, { userAgent: 'Chrome' });\n  const { webRequest } = authWindow.webContents.session;\n  webRequest.onBeforeRequest({ urls: [`${REDIRECT_URL}*`] }, async ({ url }) => {\n    await authService.loadTokens(url);\n    createAppWindow();\n  });\n}\n\nasync function createLogoutWindow() {\n  await cleanupWindows('logout');\n  if (logoutWindow !== null) return;\n  logoutWindow = new BrowserWindow({ show: false });\n  logoutWindow.loadURL(authService.logoutUrl);\n  logoutWindow.on('ready-to-show', async () => {\n    await authService.logout();\n    createAuthWindow();\n  });\n}\n\napp.on('ready', () => {\n  createWindow();\n});\napp.on('window-all-closed', () => {\n  app.quit();\n});\n\nipcMain.on('confirm-exit', () => {\n  closeAppWindow();\n});\nipcMain.on('confirm-logout', (event, args) => {\n  createLogoutWindow();\n});\nipcMain.on('userData', (event, args) => {\n  const { accessToken, profile } = authService;\n  event.returnValue = {\n    accessToken,\n    profile\n  };\n});\nipcMain.on('serverURL', (event, args) => {\n  event.returnValue = SERVER_URL;\n});\n"]}